name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, staging ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

env:
  MAVEN_OPTS: -Dmaven.repo.local=~/.m2/repository

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Check Code Format (Spotless)
        run: mvn spotless:check

      - name: Build & Unit Tests
        run: mvn clean verify jacoco:report

      - name: Upload artifacts (jar + reports)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/*.jar
            target/surefire-reports/*
            target/site/jacoco/*

  code-analysis:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-and-test, code-analysis]
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build
      - name: Deploy to Staging
        run: |
          echo "ðŸš€ Desplegando en Staging..."
          ls build/

  deploy-production:
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build
      - name: Deploy to Production
        run: |
          echo "ðŸš€ Desplegando en ProducciÃ³n..."
          ls build/